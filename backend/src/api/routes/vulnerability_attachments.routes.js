const express = require('express');
// The { mergeParams: true } option is crucial for accessing params from parent routers (i.e., :vulnerabilityId)
const router = express.Router({ mergeParams: true });
const attachmentsController = require('../controllers/attachments.controller');
const { authenticateToken } = require('../../middleware/auth.middleware');

/**
 * @swagger
 * /vulnerabilities/{vulnerabilityId}/attachments:
 *   get:
 *     summary: List all attachments for a specific vulnerability
 *     tags: [Attachments]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: vulnerabilityId
 *         required: true
 *         schema:
 *           type: integer
 *         description: The ID of the vulnerability.
 *     responses:
 *       '200':
 *         description: A list of attachments.
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   id:
 *                     type: integer
 *                   file_name:
 *                     type: string
 *                   mime_type:
 *                     type: string
 *                   file_size:
 *                     type: integer
 *                   created_at:
 *                     type: string
 *                     format: date-time
 *       '401':
 *         description: Unauthorized.
 *       '404':
 *         description: Vulnerability not found.
 */
router.get('/', authenticateToken, attachmentsController.getAttachments);

/**
 * @swagger
 * /vulnerabilities/{vulnerabilityId}/attachments:
 *   post:
 *     summary: Upload an attachment for a specific vulnerability
 *     tags: [Attachments]
 *     security:
 *       - bearerAuth: []
 *     parameters:
 *       - in: path
 *         name: vulnerabilityId
 *         required: true
 *         schema:
 *           type: integer
 *         description: The ID of the vulnerability.
 *     requestBody:
 *       required: true
 *       content:
 *         multipart/form-data:
 *           schema:
 *             type: object
 *             properties:
 *               attachment:
 *                 type: string
 *                 format: binary
 *                 description: The file to upload.
 *     responses:
 *       '201':
 *         description: Attachment uploaded successfully.
 *       '400':
 *         description: Bad request (e.g., no file, upload error).
 *       '401':
 *         description: Unauthorized.
 */
router.post('/', authenticateToken, attachmentsController.uploadAttachment);

module.exports = router;
