version: '3.9'
services:
  traefik:
    image: traefik:v3.0
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --metrics.prometheus=true
      - --metrics.prometheus.addEntryPointsLabels=true
      - --metrics.prometheus.addServicesLabels=true
      - --certificatesresolvers.lets.acme.email=${ACME_EMAIL}
      - --certificatesresolvers.lets.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.lets.acme.httpchallenge=true
      - --certificatesresolvers.lets.acme.httpchallenge.entrypoint=web
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    networks:
      - public

  backend:
    networks:
      - public
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`${API_HOST}`)
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.tls.certresolver=lets
      - traefik.http.services.api.loadbalancer.server.port=3001
      - traefik.http.routers.api-http.rule=Host(`${API_HOST}`)
      - traefik.http.routers.api-http.entrypoints=web
      - traefik.http.routers.api-http.middlewares=redirect-to-https
      - traefik.http.middlewares.api-ratelimit.ratelimit.average=20
      - traefik.http.middlewares.api-ratelimit.ratelimit.burst=40
      - traefik.http.routers.api.middlewares=api-ratelimit,sec-headers
      - traefik.http.routers.api-http.middlewares=redirect-to-https,sec-headers

  frontend:
    networks:
      - public
    labels:
      - traefik.enable=true
      - traefik.http.routers.front.rule=Host(`${APP_HOST}`)
      - traefik.http.routers.front.entrypoints=websecure
      - traefik.http.routers.front.tls.certresolver=lets
      - traefik.http.services.front.loadbalancer.server.port=80
      - traefik.http.routers.front-http.rule=Host(`${APP_HOST}`)
      - traefik.http.routers.front-http.entrypoints=web
          - traefik.http.routers.front-http.middlewares=redirect-to-https,sec-headers
          - traefik.http.routers.front.middlewares=sec-headers

  backup-cron:
    image: alpine:3.20
    depends_on:
      - backend
    volumes:
      - ./backend/scripts:/scripts:ro
      - ./backups:/backups
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - BACKUP_DIR=/backups
      - KEEP=${BACKUP_KEEP:-14}
      - CRON_SCHEDULE=${BACKUP_CRON_SCHEDULE:-0 2 * * *}
    entrypoint: /bin/sh
    command: -c "echo \"${CRON_SCHEDULE} /scripts/backup.sh >> /var/log/backup.log 2>&1\" > /etc/crontabs/root && crond -f -l 2"
    networks:
      - public

  # Redirect middleware definition (dynamic via labels)
  traefik-middleware:
    image: traefik/whoami # lightweight placeholder to attach middleware labels
    labels:
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.middlewares.sec-headers.headers.framedeny=true
      - traefik.http.middlewares.sec-headers.headers.referrerpolicy=no-referrer
      - traefik.http.middlewares.sec-headers.headers.contenttypenosniff=true
      - traefik.http.middlewares.compress.compress=true
      - traefik.http.middlewares.static-cache.headers.cachecontrol=public,max-age=31536000,immutable
    deploy:
      replicas: 0

networks:
  public:
    external: false

volumes:
  traefik_letsencrypt:
