import { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { useApiWithToasts } from "@/lib/http";
import { VulnerabilityForm } from "@/components/VulnerabilityForm";
import { Spinner } from "@/components/ui/spinner";
import { PageHeader } from "@/components/PageHeader";
import * as z from "zod";

const formSchema = z.object({
  name: z.string().min(1, { message: "Name is required" }),
  description: z.string().optional(),
  severity: z.string().min(1, { message: "Severity is required" }),
  status: z.string().min(1, { message: "Status is required" }),
});

type Vulnerability = z.infer<typeof formSchema> & { id: number };

export function EditVulnerabilityPage() {
  const { id } = useParams();
  const navigate = useNavigate();
  const [vulnerability, setVulnerability] = useState<Vulnerability | null>(null);
  const [loading, setLoading] = useState(true);
  const api = useApiWithToasts();

  useEffect(() => {
    const fetchVulnerability = async () => {
      try {
        const response = await api.get(`/api/vulnerabilities/${id}`);
        setVulnerability(response.data);
      } catch (error) {
        console.error("Error fetching vulnerability:", error);
        navigate("/");
      } finally {
        setLoading(false);
      }
    };
    fetchVulnerability();
  }, [id, navigate]);

  if (loading) {
    return <div role="status" aria-busy="true" className="flex justify-center py-10"><Spinner /></div>;
  }

  if (!vulnerability) {
    return <div>Vulnerability not found.</div>;
  }

  return (
    <div className="mx-auto max-w-5xl px-4 py-10">
      <PageHeader
        title="Edit Vulnerability"
        subtitle="Update the details or status of this vulnerability."
      />
      <VulnerabilityForm vulnerability={vulnerability} />
    </div>
  );
}
