import { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import axios from "axios";
import { VulnerabilityForm } from "@/components/VulnerabilityForm";

interface Vulnerability {
  id: number;
  name: string;
  description: string;
  severity: string;
  status: string;
  reported_at: string;
}

export function EditVulnerabilityPage() {
  const { id } = useParams<{ id: string }>();
  const [vulnerability, setVulnerability] = useState<Vulnerability | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");
  const navigate = useNavigate();

  useEffect(() => {
    const fetchVulnerability = async () => {
      try {
        const token = localStorage.getItem("token");
        if (!token) {
          navigate("/login");
          return;
        }
        const response = await axios.get(`${import.meta.env.VITE_API_BASE_URL}/api/vulnerabilities/${id}`, {
          headers: { Authorization: `Bearer ${token}` },
        });
        setVulnerability(response.data);
      } catch (err) {
        console.error("Error fetching vulnerability:", err);
        setError("Failed to load vulnerability");
      } finally {
        setLoading(false);
      }
    };

    fetchVulnerability();
  }, [id, navigate]);

  if (loading) {
    return <div className="container mx-auto p-4">Loading...</div>;
  }

  if (error) {
    return <div className="container mx-auto p-4 text-red-500">{error}</div>;
  }

  if (!vulnerability) {
    return <div className="container mx-auto p-4">Vulnerability not found.</div>;
  }

  return (
    <div className="container mx-auto p-4">
      <h1 className="text-2xl font-bold mb-4">Edit Vulnerability</h1>
      <VulnerabilityForm vulnerability={vulnerability} />
    </div>
  );
}
