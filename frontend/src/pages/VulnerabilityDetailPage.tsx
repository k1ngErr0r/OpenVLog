import { useEffect, useState } from 'react';
import { useParams, Link, useNavigate } from 'react-router-dom';
import { useApiWithToasts } from '@/lib/http';
import { Spinner } from '@/components/ui/spinner';
import { Button } from '@/components/ui/button';
import { isAdmin } from '@/lib/auth';
import { CommentThread } from '@/components/CommentThread';
import { VulnerabilityAttachments } from '@/components/VulnerabilityAttachments';
import { VulnerabilityForm } from '@/components/VulnerabilityForm';
import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';
import type { Vulnerability } from '@/types';

export function VulnerabilityDetailPage() {
  const { id } = useParams();
  const api = useApiWithToasts();
  const navigate = useNavigate();
  const [vuln, setVuln] = useState<Vulnerability | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const res = await api.get(`/api/vulnerabilities/${id}`);
        setVuln(res.data);
      } catch (e) {
        navigate('/');
      } finally {
        setLoading(false);
      }
    };
    fetchData();
  }, [id]);

  if (loading) return <div className="flex justify-center py-10" role="status" aria-busy="true"><Spinner /></div>;
  if (!vuln) return <div className="py-4">Not found.</div>;

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <h1 className="text-2xl font-bold">Vulnerability #{vuln.id}</h1>
        <div className="flex gap-2">
          <Button variant="ghost" asChild><Link to="/">Back</Link></Button>
        </div>
      </div>
      <div className="grid xl:grid-cols-2 gap-6">
        <Card className="order-1 xl:order-none">
          <CardHeader><CardTitle>Details & Edit</CardTitle></CardHeader>
          <CardContent>
            <VulnerabilityForm vulnerability={vuln} />
          </CardContent>
        </Card>
        <div className="space-y-6">
          <Card>
            <CardHeader><CardTitle>Attachments</CardTitle></CardHeader>
            <CardContent>
              <VulnerabilityAttachments vulnerabilityId={vuln.id} />
            </CardContent>
          </Card>
          <Card>
            <CardHeader><CardTitle>Comments</CardTitle></CardHeader>
            <CardContent>
              <CommentThread vulnerabilityId={vuln.id} />
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}
