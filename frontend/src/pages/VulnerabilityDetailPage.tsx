import { useEffect, useState } from 'react';
import { useParams, Link, useNavigate } from 'react-router-dom';
import { useApiWithToasts } from '@/lib/http';
import { Spinner } from '@/components/ui/spinner';
import { Button } from '@/components/ui/button';
import { isAdmin } from '@/lib/auth';
import { CommentThread } from '@/components/CommentThread';
import type { Vulnerability } from '@/types';

export function VulnerabilityDetailPage() {
  const { id } = useParams();
  const api = useApiWithToasts();
  const navigate = useNavigate();
  const [vuln, setVuln] = useState<Vulnerability | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const res = await api.get(`/api/vulnerabilities/${id}`);
        setVuln(res.data);
      } catch (e) {
        navigate('/');
      } finally {
        setLoading(false);
      }
    };
    fetchData();
  }, [id]);

  if (loading) return <div className="flex justify-center py-10" role="status" aria-busy="true"><Spinner /></div>;
  if (!vuln) return <div className="py-4">Not found.</div>;

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <h1 className="text-2xl font-bold">{vuln.name}</h1>
        <div className="flex gap-2">
          {isAdmin() && (
            <Button variant="outline" onClick={() => navigate(`/vulnerabilities/${vuln.id}/edit`)}>Edit</Button>
          )}
          <Button variant="ghost" asChild><Link to="/">Back</Link></Button>
        </div>
      </div>
      <div className="grid gap-2 text-sm">
        <div><span className="font-semibold">Severity:</span> {vuln.severity}</div>
        <div><span className="font-semibold">Status:</span> {vuln.status}</div>
        <div><span className="font-semibold">Reported:</span> {new Date(vuln.reported_at).toLocaleString()}</div>
      </div>
      <div>
        <h2 className="text-xl font-semibold mb-2">Description</h2>
        <p className="whitespace-pre-wrap text-sm leading-relaxed">{vuln.description || 'No description provided.'}</p>
      </div>
      <div>
        <h2 className="text-xl font-semibold mb-2">Comments</h2>
        <CommentThread vulnerabilityId={vuln.id} />
      </div>
    </div>
  );
}
